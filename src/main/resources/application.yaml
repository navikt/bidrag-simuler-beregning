####################################################################
#
# Profiles: All
#
####################################################################
springdoc:
  swagger-ui:
    path: /

management:
  endpoints:
    web:
      exposure:
        include: "*"

---

####################################################################
# Profile: live
#----------------------------
#
# Live token-support properties.
#
####################################################################

spring:
  config.activate.on-profile: live
  datasource:
    type: com.zaxxer.hikari.HikariDataSource
    url: jdbc:postgresql://${DB_HOST}:${DB_PORT}/${DB_DATABASE}?user=${DB_USERNAME}&password=${DB_PASSWORD}
    hikari:
      idle-timeout: 10001
      max-lifetime: 30001
      connectionTimeout: 1000
      maximum-pool-size: 10
      minimum-idle: 1
  flyway:
    enabled: true
    locations: classpath:/db/migration
  jpa:
    hibernate.connection.provider_class: org.hibernate.hikaricp.internal.HikariCPConnectionProvider
    database: postgresql
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: ${AZURE_OPENID_CONFIG_ISSUER}
          accepted-audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}
      client:
        registration:
          familiebasak:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${FAMILIEBASAK_SCOPE}/.default
          familieefsak:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${FAMILIEEFSAK_SCOPE}/.default
          familiekssak:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${FAMILIEKSSAK_SCOPE}/.default
          bidraggcpproxy:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${BIDRAGGCPPROXY_SCOPE}/.default
          inntektskomponenten:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${INNTEKTSKOMPONENTEN_SCOPE}/.default
          kontantstotte:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${KONTANTSTOTTE_SCOPE}/.default
          bidragperson:
            provider: aad
            client-id: ${AZURE_APP_CLIENT_ID}
            client-secret: ${AZURE_APP_CLIENT_SECRET}
            authorization-grant-type: client_credentials
            scope: api://${BIDRAGPERSON_SCOPE}/.default
        provider:
          aad:
            token-uri: ${AZURE_OPENID_CONFIG_TOKEN_ENDPOINT}
            jwk-set-uri: ${AZURE_OPENID_CONFIG_JWKS_URI}

# OIDC
no.nav.security.jwt:
  issuer:
    aad:
      discoveryurl: ${AZURE_APP_WELL_KNOWN_URL}
      accepted_audience: ${AZURE_APP_CLIENT_ID}, api://${AZURE_APP_CLIENT_ID}

