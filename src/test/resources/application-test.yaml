FAMILIEBASAK_URL: http://localhost:${wiremock.server.port}/familiebasak
FAMILIEEFSAK_URL: http://localhost:${wiremock.server.port}/familieefsak
BIDRAGGCPPROXY_URL: http://localhost:${wiremock.server.port}/bidraggcpproxy
INNTEKTSKOMPONENTEN_URL: http://localhost:${wiremock.server.port}/inntektskomponenten
BIDRAGPERSON_URL: http://localhost:${wiremock.server.port}/bidragperson
#KONTANTSTOTTE_URL: http://localhost:${wiremock.server.port}/kontantstotte
FAMILIEKSSAK_URL: http://localhost:${wiremock.server.port}/familiekssak
spring:
  config.activate.on-profile: test, local
  flyway.enabled: false
  datasource.type: com.zaxxer.hikari.HikariDataSource
  datasource.url: jdbc:h2:mem:default
  #  datasource.url: jdbc:h2:file:/Users/R153961/Dev/bidrag-grunnlag/src/main/resources/data
  h2.console.enabled: true
  jpa.hibernate.hbmddl-auto: create-drop
  security:
    oauth2:
      resourceserver:
        jwt:
          issuer-uri: http://localhost:${mock-oauth2-server.port}/azure
      client:
        registration:
          familiebasak:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://familiebasak/.default
          bidraggcpproxy:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://bidraggcpproxy/.default
          inntektskomponenten:
            provider: aad
            client-id: someid
            client-secret: secret
            authorization-grant-type: client_credentials
            scope: api://inntektskomponenten/.default
        provider:
          aad:
            token-uri: http://localhost:${mock-oauth2-server.port}/azure/token
            jwk-set-uri: http://localhost:${mock-oauth2-server.port}/azure/jwks

no.nav.security.jwt:
  issuer:
    aad:
      discovery_url: http://localhost:${mock-oauth2-server.port}/aad/.well-known/openid-configuration
      accepted_audience: aud-localhost
spring.kafka:
  properties:
    schema:
      registry.url: http://unused-dummy-url
      security.protocol: PLAINTEXT
  consumer:
    group-id: test
    auto-offset-reset: earliest
    key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
